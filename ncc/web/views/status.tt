
    <link rel="stylesheet" href="/javascripts/jqwidgets/styles/jqx.base.css" type="text/css" />
    
    <script type="text/javascript">
        
        $(document).ready(function () {
            var theme = getDemoTheme();
            // prepare the data
            var timer;
            function refreshmypage(){
                //document.location=document.location.href;
                 initGridServices();
                  timer=setTimeout(refreshmypage,60*1000);
            }
            timer=setTimeout(refreshmypage,60*1000);
            var loadMonitor = function (url) {
               
                $.get(url, function (data) {
                    alert(data);
                    $('#monitor').html(data);
                });
            }
            var initGridServices = function () {
             var source =
             {
                datatype: "json",
                datafields: [
                    { name: 'cluster', type: 'string' },
                    { name: 'name', type: 'string' },
                    { name: 'mode', type: 'string' },
                    { name: 'ip', type: 'string' },
                    { name: 'status', type: 'text'},
                    { name: 'state', type: 'text' }
                ],
                url: "/services/status",
                data: {
                    featureClass: "P",
                    style: "full",
                    maxRows: 15
                }
                
             };
             
             var sourceclusters =
             {
                datatype: "json",
                datafields: [
                    { name: 'name', type: 'string' },
                    { name: 'label', type: 'string' }
                ],
                url: "/getclusters",
                data: {
                    featureClass: "P",
                    style: "full",
                    maxRows: 15
                }
                
             };

             var dataAdapter = new $.jqx.dataAdapter(source);
             var columnCheckBox = null;
             
             var updatingCheckState = false;
             
             var cellsrenderer = function (row, columnfield, value, defaulthtml, columnproperties) {
                if (value =="running") {
                     return '<div style="margin: 4px;float: left;' + columnproperties.cellsalign + '"><img width="16" height="16" src="/images/green.png" />  </div>'+ value; 
                }
                else {
                 
                     return '<div style="margin: 4px;float: left;' + columnproperties.cellsalign + '"><img width="16" height="16" src="/images/red.png" />  </div>'+ value; 
                }
             } 
             // initialize jqxGrid. Disable the built-in selection.
            
            $("#jqxgrid").jqxGrid(
            {
                source: dataAdapter,
                editable: true,
                theme: theme,
                enablehover: false,
                sortable: true,
                filterable: true,
                selectionmode: 'none',
                columns: [
                    { text: '', datafield: 'available', columntype: 'checkbox', width: 20,
                        renderer: function () {
                            return '<div style="margin-left: 2px; margin-top: 5px;"></div>';
                        },
                        rendered: function (element) {
                            $(element).jqxCheckBox({ theme: theme, width: 16, height: 16, animationShowDelay: 0, animationHideDelay: 0 });
                            columnCheckBox = $(element);
                            $(element).on('change', function (event) {
                                var checked = event.args.checked;
                                if (checked == null || updatingCheckState) return;
                                var rowscount = $("#jqxgrid").jqxGrid('getdatainformation').rowscount;
                                $("#jqxgrid").jqxGrid('beginupdate');
                                if (checked) {
                                    $("#jqxgrid").jqxGrid('selectallrows');
                                }
                                else if (checked == false) {
                                    $("#jqxgrid").jqxGrid('clearselection');
                                }
                                for (var i = 0; i < rowscount; i++) {
                                    $("#jqxgrid").jqxGrid('setcellvalue', i, 'available', event.args.checked);
                                }
                                $("#jqxgrid").jqxGrid('endupdate');
                            });
                        }
                    },
                    { text: 'Cluster', filtertype: 'list', filteritems: sourceclusters, datafield: 'cluster', width: 100 },
                    { text: 'Id', datafield: 'name', width: 100 },
                    { text: 'Service', datafield: 'mode' , width: 90},
                    { text: 'Ip', datafield: 'ip' ,width: 90},
                    { text: 'Status', datafield: 'status' , width: 90 },
                    { text: 'State', datafield: 'state' , cellsrenderer: cellsrenderer}
                ]
                });  
            
            };
                

            var initGridInstances = function () {
            var source =
            {
                datatype: "json",
                datafields: [
                    { name: 'name', type: 'string' },
                    { name: 'ip', type: 'string' },
                    { name: 'state', type: 'string' }
                ],
                url: "/instances/status",
                data: {
                    featureClass: "P",
                    style: "full",
                    maxRows: 20
                }
            };
            var cellsrenderer = function (row, columnfield, value, defaulthtml, columnproperties) {
                if (value =="running") {
                     return '<div style="margin: 4px;float: left;' + columnproperties.cellsalign + '"><img width="16" height="16" src="/images/green.png" />  </div>'+ value; 
                   
                }
                else {
                     return '<div style="margin: 4px;float: left;' + columnproperties.cellsalign + '"><img width="16" height="16" src="/images/red.png" />  </div>'+ value;       
                }
            } 
            var dataAdapterInstances = new $.jqx.dataAdapter(source);
             var columnCheckBoxInstances = null;
             var updatingCheckStateInstances = false;
             
             // initialize jqxGrid. Disable the built-in selection.
            $("#jqxgridinstances").jqxGrid(
            {
                source: dataAdapterInstances,
                editable: true,
                theme: theme,
                enablehover: false,
                selectionmode: 'none',
                columns: [
                    { text: '', datafield: 'availableinstances', columntype: 'checkbox', width: 40,
                        renderer: function () {
                            return '<div style="margin-left: 10px; margin-top: 5px;"></div>';
                        },
                        rendered: function (element) {
                            $(element).jqxCheckBox({ theme: theme, width: 16, height: 16, animationShowDelay: 0, animationHideDelay: 0 });
                            columnCheckBoxInstances = $(element);
                            $(element).on('change', function (event) {
                                var checked = event.args.checked;
                                if (checked == null || updatingCheckStateInstances) return;
                                var rowscount = $("#jqxgridinstances").jqxGrid('getdatainformation').rowscount;
                                $("#jqxgridinstances").jqxGrid('beginupdate');
                                if (checked) {
                                    $("#jqxgridinstances").jqxGrid('selectallrows');
                                }
                                else if (checked == false) {
                                    $("#jqxgridinstances").jqxGrid('clearselection');
                                }
                                for (var i = 0; i < rowscount; i++) {
                                    $("#jqxgridinstances").jqxGrid('setcellvalue', i, 'availableinstances', event.args.checked);
                                }
                                $("#jqxgridinstances").jqxGrid('endupdate');
                            });
                        }
                    },
                    { text: 'Id', datafield: 'name', width: 80 },
                    { text: 'Ip', datafield: 'ip' },
                    { text: 'State', datafield: 'state'  ,cellsrenderer: cellsrenderer}
                ]
                });
              
            };
            
            var initGridVariables = function (service) {
            var source =
            {
                datatype: "json",
                datafields: [
                    { name: 'name', type: 'string' },
                    { name: 'value', type: 'string' }
                  
                ],
                url: "/config/infos/" + service ,
                data: {
                    featureClass: "P",
                    style: "full",
                    maxRows: 20
                }
            };
            
            var dataAdapterVariables = new $.jqx.dataAdapter(source);
            $("#jqxgridvariables").jqxGrid(
            {
                source: dataAdapterVariables,
                editable: true,
                theme: theme,
                enablehover: false,
                selectionmode: 'none',
                columns: [
                    { text: 'Parameter', datafield: 'name', width: 200 },
                    { text: 'Value', datafield: 'value' },
                  
                ]
             });
              
            };

              // select or unselect rows when the checkbox is checked or unchecked.
             $("#jqxgrid").on('cellendedit', function (event) {
                 if (event.args.value) {
                     $("#jqxgrid").jqxGrid('selectrow', event.args.rowindex);
                        var dataRecord = $("#jqxgrid").jqxGrid('getrowdata', event.args.rowindex);
                        
                       initGridVariables(dataRecord.name);
                       loadPageDetails("/config/file/"+dataRecord.name);
                       loadConsole("/console/"+dataRecord.name);

                 }
                 else {
                     $("#jqxgrid").jqxGrid('unselectrow', event.args.rowindex);
                 }
                 if (columnCheckBox) {
                     var selectedRowsCount = $("#jqxgrid").jqxGrid('getselectedrowindexes').length;
                     var rowscount = $("#jqxgrid").jqxGrid('getdatainformation').rowscount;
                     updatingCheckState = true;
                     if (selectedRowsCount == rowscount) {
                         $(columnCheckBox).jqxCheckBox('check')
                     }
                     else if (selectedRowsCount > 0) {
                         $(columnCheckBox).jqxCheckBox('indeterminate');
                     }
                     else {
                         $(columnCheckBox).jqxCheckBox('uncheck');
                     }
                     updatingCheckState = false;
                 }
            });
             $("#jqxgridinstances").on('cellendedit', function (event) {
                 if (event.args.value) {
                     $("#jqxgridinstances").jqxGrid('selectrow', event.args.rowindex);
                        var dataRecord = $("#jqxgridinstances").jqxGrid('getrowdata', event.args.rowindex);
                        
                    

                 }
                 else {
                     $("#jqxgridinstances").jqxGrid('unselectrow', event.args.rowindex);
                 }
                 if (columnCheckBox) {
                     var selectedRowsCount = $("#jqxgridinstances").jqxGrid('getselectedrowindexes').length;
                     var rowscount = $("#jqxgridinstances").jqxGrid('getdatainformation').rowscount;
                     updatingCheckState = true;
                     if (selectedRowsCount == rowscount) {
                         $(columnCheckBox).jqxCheckBox('check')
                     }
                     else if (selectedRowsCount > 0) {
                         $(columnCheckBox).jqxCheckBox('indeterminate');
                     }
                     else {
                         $(columnCheckBox).jqxCheckBox('uncheck');
                     }
                     updatingCheckState = false;
                 }
            });
            

             // create context menu
            var contextMenu = $("#MenuService").jqxMenu({ width: 100, height: 250, autoOpenPopup: false, mode: 'popup', theme: theme });
            $("#jqxgrid").on('contextmenu', function () {
                return false;
            });

             var contextMenuInstances = $("#MenuInstance").jqxMenu({ width: 100, height: 150, autoOpenPopup: false, mode: 'popup', theme: theme });
            $("#jqxgridinstances").on('contextMenuInstances', function () {
                return false;
            });

            // handle context menu clicks.
            $("#MenuService").on('itemclick', function (event) {
                 var args = event.args;
                 var rowscount = $("#jqxgrid").jqxGrid('getdatainformation').rowscount;
                   
                 // get the clicked row's data and initialize the input fields.
                    for (var i = 0; i < rowscount; i++) {
                       
                        var dataRecord = $("#jqxgrid").jqxGrid('getrowdata', i);
                    
                        if  ($("#jqxgrid").jqxGrid('getcellvalue',i,'available') ){
                          var i = document.createElement("img");
                          alert(i.src);
                          i.src = '/services/'+ $(event.args).text()+ '/'+ dataRecord.name+'/all';
                      alert(i.src);
                          refreshmypage();


                          }
                   }
                  
                
            });
             $("#MenuInstance").on('itemclick', function (event) {
                 var args = event.args;
                 var rowscount = $("#jqxgridinstances").jqxGrid('getdatainformation').rowscount;
                   
                 // get the clicked row's data and initialize the input fields.
                    for (var i = 0; i < rowscount; i++) {
                       
                        var dataRecord = $("#jqxgridinstances").jqxGrid('getrowdata', i);
                    
                        if  ($("#jqxgridinstances").jqxGrid('getcellvalue',i,'available') ){
                          var i = document.createElement("img");
                          i.src = '/instances/'+ $(event.args).text()+ '/'+ dataRecord.ip+'/all';
                      
                          initGridInstances();


                          }
                   }
                  
                
            });

            $("#jqxgrid").on('rowclick', function (event) {
                if (event.args.rightclick) {
                    var scrollTop = $(window).scrollTop();
                    var scrollLeft = $(window).scrollLeft();
                    contextMenu.jqxMenu('open', parseInt(event.args.originalEvent.clientX) + 5 + scrollLeft, parseInt(event.args.originalEvent.clientY) + 5 + scrollTop);
                    return false;
                }
               
            });
              $("#jqxgridinstances").on('rowclick', function (event) {
              if (event.args.rightclick) {
                    var scrollTop = $(window).scrollTop();
                    var scrollLeft = $(window).scrollLeft();
                    contextMenuInstances.jqxMenu('open', parseInt(event.args.originalEvent.clientX) + 5 + scrollLeft, parseInt(event.args.originalEvent.clientY) + 5 + scrollTop);
                    return false;
              }
               
            });    
           
            var initWidgets = function (tab) {
                switch (tab) {
                    case 0:
                        initGridServices();
                        break;
                    case 1:
                        initGridInstances();
                        break;
                     case 2:
                        loadMonitor('http://107.21.41.133:80/' );
                        break; 
                      case 3:
                        break; 
   
                }
            }
            $('#jqxTabs').jqxTabs({ width: 600, height: 450, theme: theme, initTabContent: initWidgets });

            var initWidgetsDetails = function (tab) {
                switch (tab) {
                    case 0:
                        initGridVariables("db10");
                        break;
                    case 1:
                        initGridLogs();
                        break;
                      
   
                }
            }
            $('#jqxTabsDetails').jqxTabs({ width: 600, height: 400, theme: theme, initTabContent: initWidgetsDetails });
            var loadPageDetails = function (url) {
                 $('#config').load(url);
              //  $.get(url, function (data) {
              //   $('#config').text(data);
                
              // });
            }
            var loadConsole = function (url) {
                 $('#console').load(url);
             
            }


            var url = "/getclusters";
                // prepare the data
                var source =
                {
                    datatype: "json",
                    datafields: [
                        { name: 'id' , type: 'string' },
                        { name: 'label' , type: 'string'}
                    ],
                    data: {
                        featureClass: "P",
                        style: "full",
                        maxRows: 15
                    },
                    url: url,
                    async: false
                };
                var dataAdapterCloud = new $.jqx.dataAdapter(source);
                // Create a jqxDropDownList
                $("#jqxWidget").jqxDropDownList({ selectedIndex: 0, source: dataAdapterCloud, displayMember: "label", valueMember: "id", width: 300, height: 25, theme: theme });
                // subscribe to the select event.
                $("#jqxWidget").on('select', function (event) {
                    if (event.args) {
                        var item = event.args.item;
                        if (item) {
                            var datarecord = dataAdapterCloud.records[item.index];
                            $("#jqxgrid").jqxGrid('clearfilters');
                            var filtergroup = new $.jqx.filter();    
                         
                            var filter = filtergroup.createfilter('stringfilter', datarecord.id, 'starts_with');
                            filtergroup.addfilter(0, filter);
                           
                            $("#jqxgrid").jqxGrid('addfilter', 'cluster',filtergroup );     
                            $("#jqxgrid").jqxGrid('applyfilters');
                            var valueelement = $("<div></div>");
                            valueelement.text("Id: " +datarecord.id);
                            var labelelement = $("<div></div>");
                            labelelement.text("Label: " + item.label);
                            $("#selectionlog").children().remove();
                            $("#selectionlog").append(labelelement);
                            $("#selectionlog").append(valueelement);
                        }
                    }
                });
 

        });
        
        
    </script>

<div id="page">
      <div id="sidebar">
        <ul id="sidebar-items">
          <li>
            <h3>Join the community</h3>
            <ul class="links">

              <li><a href="/">ScrambleDB</a></li>
              <li><a href="https://github.com/svaroqui/scrambledb">GitHub Community</a></li>
            </ul>
          </li>
          
          <li>
            <h3>Browse the documentation</h3>

            <ul class="links">
              <li><a
              href="https://github.com/svaroqui/scrambledb/wiki">Introduction</a></li>
              <li><a href="">Cookbook</a></li>
              <li><a href="https://github.com/svaroqui/scrambledb/wiki/Get-started">Deployment Guide</a></li>
              <li><a
              href=""
              title="a tutorial to build a small blog engine with Dancer">Tutorial</a></li>
            </ul>
          </li>

          <li>
            <h3>Your application's environment</h3>

            <ul>
                <li>Location: <code>/Users/svar/scrambledb/ncc/web</code></li>
                <li>Template engine: <code><% settings.template %></code></li>
                <li>Logger: <code><% settings.logger %></code></li>
                <li>Environment: <code><% settings.environment %></code></li>
            </ul>

          </li>
        </ul>

      </div>

      <div id="content">
        <div id="header">
          <h1>ScrambleDB</h1>
          <h2>One ring to rule them all...</h2>
           
        </div>
         
        <div id="getting-started">

          <div id="about-content" style="display: none;">
            <table>
                <tbody>
                <tr>
                    <td>Perl version</td>
                    <td><tt><% perl_version %></tt></td>
                </tr>
                <tr>
                    <td>Dancer version</td>
                    <td><tt><% dancer_version %></tt></td>
                </tr>
                <tr>
                    <td>Backend</td>
                    <td><tt><% settings.apphandler %></tt></td>
                </tr>
                <tr>
                    <td>Appdir</td>
                    <td><tt>/Users/svar/scrambledb/ncc/web</tt></td>
                </tr>
                <tr>
                    <td>Template engine</td>
                    <td><tt><% settings.template %></tt></td>
                </tr>
                <tr>
                    <td>Logger engine</td>
                    <td><tt><% settings.logger %></tt></td>
                </tr>
                <tr>
                    <td>Running environment</td>
                    <td><tt><% settings.environment %></tt></td>
                </tr>
                </tbody>
            </table>
          </div>
        </div>

        <div id='jqxWidget'>
         <div style='float: left; ' id='jqxDropDownList'> </div>
        </div>
        <div style="height: 40px; " id='cloud'>
            <div style="font-size: 12px; font-family: Verdana;" id="selectionlog"></div>
         </div>





        <div id='jqxTabs'>
            <ul>
                <li style="margin-left: 30px;">
                    <div style="height: 20px; margin-top: 5px;">
                        <div style="float: left;">
                            <img width="24" height="24" src="/images/database.png" />
                        </div>
                        <div style="margin-left: 4px; vertical-align: middle; text-align: center; float: left;">
                           Services
                        </div>
                     </div>
                </li>
                <li>
                    <div style="height: 20px; margin-top: 5px;">
                        <div style="float: left;">
                            <img width="24" height="24" src="/images/server.png" />
                        </div>
                       <div style="margin-left: 4px; vertical-align: middle; text-align: center; float: left;">
                           Instances
                        </div>
                   </div>     
                </li>
                 <li>
                    <div style="height: 20px; margin-top: 5px;">
                        <div style="float: left;">
                            <img width="24" height="24" src="/images/bar_chart.png" />
                        </div>
                       <div style="margin-left: 4px; vertical-align: middle; text-align: center; float: left;">
                           Monitor
                        </div>
                    </div>        
                </li>
                   <li>
                    <div style="height: 20px; margin-top: 5px;">
                        <div style="float: left;">
                            <img width="24" height="24" src="/images/sql_runner.png" />
                        </div>
                       <div style="margin-left: 4px; vertical-align: middle; text-align: center; float: left;">
                           Rules
                        </div>
                    </div>        
                </li>
            </ul>
            <div style="overflow: hidden;">
                <div id="jqxgrid" ></div>
                <div id='MenuService'>
                    <ul>
                       <li>install</li>
                       <li>start</li>
                       <li>stop</li>
                       <li>sync</li>
                       <li>move</li>
                       <li>duplicate</li>
                       <li>remove</li>
                       <li>switch</li>
                       <li>terminate</li>
                       
                   </ul>
               </div>
            </div>
               
            <div style="overflow: hidden;">
                <div id="jqxgridinstances" ></div>
                <div id='MenuInstance'>
                    <ul>
                       <li>start</li>
                       <li>stop</li>
                       <li>terminate</li>
                   </ul>
               </div>
            </div>
            <div  style="overflow: hidden;">
                <div id="monitor" style="height: 100px; width: 400px; "></div>
            </div>
             <div style="overflow: hidden;">
                <div id="jqxgridsql"  ></div>
            </div>
           </div>
        
          
            <div id='jqxTabsDetails'>
            <ul>
                <li style="margin-left: 30px;">
                    <div style="height: 20px; margin-top: 5px;">
                        <div style="float: left;">
                            <img width="24" height="24" src="/images/properties.png" />
                        </div>
                        <div style="margin-left: 4px; vertical-align: middle; text-align: center; float: left;">
                           Variables
                        </div>
                     </div>
                </li>
                <li>
                    <div style="height: 20px; margin-top: 5px;">
                        <div style="float: left;">
                            <img width="24" height="24" src="/images/log.png" />
                        </div>
                       <div style="margin-left: 4px; vertical-align: middle; text-align: center; float: left;">
                           Logs
                        </div>
                   </div>     
                </li>
                 <li>
                    <div style="height: 20px; margin-top: 5px;">
                        <div style="float: left;">
                            <img width="24" height="24" src="/images/config.png" />
                        </div>
                       <div style="margin-left: 4px; vertical-align: middle; text-align: center; float: left;">
                           Config
                        </div>
                   </div>     
                </li>
             </ul>
              <div style="overflow: hidden;">
                <div id="jqxgridvariables" ></div>
            </div>
              <div id="console">
                <img src='/images/ajax-loader.gif' />
            </div>
            <div id="config">
                <img src='/images/ajax-loader.gif' />
            </div>
       </div>
   
      

    </div>
    </div>
